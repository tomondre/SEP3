@page "/AddExperience"
@using GrpcFileGeneration.Models
@using Networking.Experience
@using ClientBlazor.Data.Experiences
@using ClientBlazor.Data.ProductCategory
@using Microsoft.Extensions.Logging
@using System.IO
@using Microsoft.AspNetCore.Hosting

@inject IWebHostEnvironment Environment
@inject IExperienceService ExperienceService
@inject NavigationManager NavigationManager
@inject IProductCategoryService ProductCategoryService

@* TODO transform strings in ENUM for Validity *@

<div class="container items-center px-5 py-12 lg:px-20">
  <EditForm Model="@newExperience" OnValidSubmit="@AddNewExperience" class="flex flex-col w-full p-10 px-8 pt-6 mx-auto my-6 mb-4 transition duration-500 ease-in-out transform bg-white border rounded-lg lg:w-1/2 ">
  <DataAnnotationsValidator/>
  <ValidationSummary/>
  
  <section class="flex flex-col w-full h-full p-1 overflow-auto">
    
    
    <header class="flex flex-col items-center justify-center py-12 text-base text-blueGray-500 transition duration-500 ease-in-out transform bg-white border border-dashed rounded-lg focus:border-blue-500 focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2">
      <p class="flex flex-wrap justify-center mb-3 text-base leading-7 text-blueGray-500">
        <label>
              Upload up to @maxFileSize bytes:
              <InputFile OnChange="@LoadFiles" multiple />
            </label>
      </p>
    </header>
    
    </section>
    <div class="relative pt-4">
      <InputText type="text" id="name" name="name" placeholder="Experience title" class="w-full px-4 py-2 mt-2 mr-4 text-base text-black transition duration-500 ease-in-out transform rounded-lg bg-gray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2" @bind-Value="newExperience.Name"/>
    </div>
    <div class="relative pt-4">
      <label for="price" class="text-base leading-7 text-blueGray-500">Price: </label>
      <InputNumber id="price" name="color"  class="w-full px-4 py-2 mt-2 mr-4 text-base text-black transition duration-500 ease-in-out transform rounded-lg bg-gray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2"@bind-Value="newExperience.Price"/>
    </div>
    <div class="relative pt-4">
      <label for="name" class="text-base leading-7 text-blueGray-500">Address/Street</label>
      <InputText type="text" id="street" name="text"  class="w-full px-4 py-2 mt-2 mr-4 text-base text-black transition duration-500 ease-in-out transform rounded-lg bg-gray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2" @bind-Value="newExperience.Address.Street"/>
    </div>
    <div class="relative pt-4">
      <label for="StreetNo" class="text-base leading-7 text-blueGray-500">StreetNo.</label>
      <InputText  id="StreetNo" name="StreetNo"  class="w-full px-0 py-2 mt-2 mr-4 text-base text-black transition duration-500 ease-in-out transform rounded-lg bg-gray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2" @bind-Value="newExperience.Address.StreetNumber"/>
    </div>
    <div class="relative pt-4">
      <label for="city" class="text-base leading-7 text-blueGray-500">City</label>
      <InputText id="city" name="range"  class="w-full px-0 py-2 mt-2 mr-4 text-base text-black transition duration-500 ease-in-out transform rounded-lg bg-gray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2" @bind-Value="newExperience.Address.City"/>
    </div>
    <div class="relative pt-4">
      <label for="code" class="text-base leading-7 text-blueGray-500">Zip Code</label>
      <InputNumber  id="code" name="code"  class="w-full px-0 py-2 mt-2 mr-4 text-base text-black transition duration-500 ease-in-out transform rounded-lg bg-gray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2" @bind-Value="newExperience.Address.PostCode"/>
    </div>
  <div class="relative mt-4">
    <label for="name" class="text-base leading-7 text-blueGray-500">Validity</label>
    <InputSelect class="w-full px-4 py-2 mt-2 text-base text-black transition duration-500 ease-in-out transform rounded-lg bg-gray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2" @bind-Value="newExperience.ExperienceValidity">
      <option>3 Months</option>
      <option>6 Months</option>
      <option>1 Year</option>
    </InputSelect>
  </div>
  <div class="relative mt-4">
    <label for="name" class="text-base leading-7 text-blueGray-500">Category</label>
    
                <InputSelect @bind-Value="newExperience.ExperienceCategory" class="w-full px-4 py-2 mt-2 text-base text-black transition duration-500 ease-in-out transform rounded-lg bg-gray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2">
               @foreach (Category category in categories.Categories)
               {
                 <option >@category.CategoryName</option>
               }              
                </InputSelect>
                
    
  </div>
    <div class="flex flex-wrap mt-4 mb-6 -mx-3">
      <div class="w-full px-3">
        <label class="text-base leading-7 text-blueGray-500" for="description">Description:  </label>
        <InputTextArea class="w-full h-32 px-4 py-2 mt-2 text-base text-blueGray-500 transition duration-500 ease-in-out transform bg-white border rounded-lg focus:border-blue-500 focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2 apearance-none autoexpand" id="description" type="text" name="description" placeholder="Description" required="" @bind-Value="newExperience.Description"></InputTextArea>
      </div>
    </div>
    <div class="flex items-center w-full pt-4 mb-4">
      <button class="w-full py-3 text-base text-white transition duration-500 ease-in-out transform bg-blue-600 border-blue-600 rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:bg-blue-800 "> Add </button>
    </div>
    <hr class="my-4 border-gray-200">
   
  </EditForm>
</div>

@code {

  private Experience newExperience = new Experience();
  private CategoryList categories = new();

  protected override async Task OnInitializedAsync()
  {
    categories = await ProductCategoryService.GetAllCategoriesAsync();
  }

  private async Task AddNewExperience()
  {
    newExperience.Picture = "";
    newExperience.ExperienceCategory = null;
    newExperience.ExperienceProvider = null;
    
    await ExperienceService.AddExperienceAsync(newExperience);
    NavigationManager.NavigateTo("/AllExperiences");
  }
  
  private List<IBrowserFile> loadedFiles = new();
  private long maxFileSize = 1024 * 15;
  private int maxAllowedFiles = 3;
  private bool isLoading;

  private async Task LoadFiles(InputFileChangeEventArgs e)
  {
    isLoading = true;
    loadedFiles.Clear();

    foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
    {
      try
      {
        loadedFiles.Add(file);

        var trustedFileNameForFileStorage = Path.GetRandomFileName();
        var path = Path.Combine(Environment.ContentRootPath,
          Environment.EnvironmentName, "unsafe_uploads",
          trustedFileNameForFileStorage);

        await using FileStream fs = new(path, FileMode.Create);
        await file.OpenReadStream(maxFileSize).CopyToAsync(fs);
      }
      catch (Exception ex)
      {
        
      }
    }

    isLoading = false;
  }

}